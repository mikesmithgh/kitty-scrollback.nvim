==============================================================================
                                                       *kitty-scrollback.launch*

KsbKittyOpts                              *kitty-scrollback.launch.KsbKittyOpts*

    Fields: ~
        {shell_integration}                (table)
        {scrollback_fill_enlarged_window}  (boolean)
        {scrollback_lines}                 (integer)
        {scrollback_pager}                 (table)
        {scrollback_pager_history_size}    (integer)
        {allow_remote_control}             (string)   'password' | 'socket-only' | 'socket' | 'no' | 'n' | 'false' | 'yes' | 'y' | 'true'
        {listen_on}                        (string)


KsbKittyData                              *kitty-scrollback.launch.KsbKittyData*

    Fields: ~
        {scrolled_by}              (integer)       the number of lines currently scrolled in kitty
        {cursor_x}                 (integer)       position of the cusor in the column in kitty
        {cursor_y}                 (integer)       position of the cursor in the row in kitty
        {lines}                    (integer)       the number of rows of the screen in kitty
        {columns}                  (integer)       the number of columns of the screen in kitty
        {window_id}                (integer)       the id of the window to get scrollback text
        {window_title}             (string)        the title of the window to get scrollback text
        {ksb_dir}                  (string)        the base runtime path of kitty-scrollback.nvim
        {kitty_scrollback_config}  (string)        the config name of user config options
        {kitty_opts}               (KsbKittyOpts)  relevant kitty configuration values
        {kitty_config_dir}         (string)        kitty configuration directory path
        {kitty_version}            (table)         kitty version
        {kitty_path}               (string)        kitty executable path


KsbPrivate                                  *kitty-scrollback.launch.KsbPrivate*

    Fields: ~
        {orig_columns}         (number)
        {orig_normal_hl}       (table|nil)
        {bufid}                (number|nil)
        {paste_bufid}          (number|nil)
        {kitty_loading_winid}  (number|nil)
        {kitty_colors}         (table)
        {kitty_data}           (KsbKittyData)
        {paste_winid}          (number|nil)
        {footer_winid}         (number|nil)
        {footer_bufid}         (number|nil)
        {pos}                  (table|nil)


M.setup({kitty_data_str})                        *kitty-scrollback.launch.setup*
    Setup and configure kitty-scrollback.nvim

    Parameters: ~
        {kitty_data_str}  (string)


M.launch()                                      *kitty-scrollback.launch.launch*
    Launch kitty-scrollack.nvim with configured scrollback buffer


M.setup_and_launch({kitty_data_str})  *kitty-scrollback.launch.setup_and_launch*
    Setup and launch kitty-scrollback.nvim

    Parameters: ~
        {kitty_data_str}  (string)


==============================================================================
                                                          *kitty-scrollback.api*

M.setup()                                           *kitty-scrollback.api.setup*


M.quit_all()                                     *kitty-scrollback.api.quit_all*
    Attempt to force quit Neovim. How do you exit vim? Why would you exit vim?


M.close_or_quit_all()                   *kitty-scrollback.api.close_or_quit_all*
    If the current buffer is the paste buffer, then close the window
    If the current buffer is the scrollback buffer, then quitall
    Otherwise, no operation


M.execute_command()                       *kitty-scrollback.api.execute_command*
    If the current buffer is the paste buffer, then quit and execute the paste
    window contents in Kitty. Otherwise, no operation


M.paste_command()                           *kitty-scrollback.api.paste_command*
    If the current buffer is the paste buffer, then quit and paste the paste
    window contents to Kitty. Otherwise, no operation


                                     *kitty-scrollback.api.paste_visual_command*
M.paste_visual_command()


                                   *kitty-scrollback.api.execute_visual_command*
M.execute_visual_command()


M.toggle_footer()                           *kitty-scrollback.api.toggle_footer*
    If the current buffer is the paste buffer, toggle the footer window
    open or closed. Otherwise, no operation


KsbGenKittenModes                       *kitty-scrollback.api.KsbGenKittenModes*

    Type: ~
        string|"maps"|"commands"


M.generate_kittens()                     *kitty-scrollback.api.generate_kittens*


M.checkhealth()                               *kitty-scrollback.api.checkhealth*


                               *kitty-scrollback.api.close_kitty_loading_window*
M.close_kitty_loading_window()
     Try to close Kitty loading window
     If the first attempt to close fails, then list all Kitty windows to see if window exists
     If the window does exist, then reattempt to close the window and report error on failure


M.get_kitty_colors({kitty_data})         *kitty-scrollback.api.get_kitty_colors*
     Try to get Kitty terminal colors
     If the first attempt fails for the given window id, then reattempt without a window id

    Parameters: ~
        {kitty_data}  (KsbKittyData)  @return boolean, vim.SystemCompleted


vim:tw=78:ts=8:noet:ft=help:norl:
